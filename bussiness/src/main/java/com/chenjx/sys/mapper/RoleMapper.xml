<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chenjx.sys.dao.RoleMapper">
	<resultMap id="RoleMap" type="com.chenjx.sys.model.Role">
		<id column="id" property="id" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="available" property="available" jdbcType="VARCHAR" />
		<collection property="permissions" ofType="com.chenjx.sys.model.Permissions">
			<!-- id：订单明细的唯一标识 列 -->
			<id property="id" column="pid"/>
			<result property="permission" column="permission"/>
			<result property="description" column="pdescription"/>
			<result property="available" column="pavailable"/>
		</collection>
	</resultMap>

	<sql id="Base_Select_SQL">
		r.id, r.role_name, r.description, r.available
	</sql>

	<insert id="insert" parameterType="com.chenjx.sys.model.Role">
		insert into sys_role(
		<trim suffixOverrides=",">
			<if test="roleName!=null and roleName!=''">
				role_name,
			</if>
			<if test="description!=null and description!=''">
				description,
			</if>
			<if test="available!=null and available!=''">
				available,
			</if>
		</trim>
		) values (
		<trim suffixOverrides=",">
			<if test="roleName!=null and roleName!=''">
				#{roleName},
			</if>
			<if test="description!=null and description!=''">
				#{description},
			</if>
			<if test="available!=null and available!=''">
				#{available},
			</if>
		</trim>
		)
	</insert>

	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM sys_role
		WHERE id = #{id}
	</delete>

	<update id="update" parameterType="com.chenjx.sys.model.Role">
		update sys_role
		<set>
			<if test="roleName!=null and roleName!=''">
				role_name=#{roleName},
			</if>
			<if test="description!=null and description!=''">
				description=#{description},
			</if>
			<if test="available!=null and available!=''">
				available=#{available},
			</if>
		</set>
		where id=#{id}
	</update>

	<select id="findById" parameterType="java.lang.String" resultType="com.chenjx.sys.model.Role">
		SELECT <include refid="Base_Select_SQL" />
		FROM sys_role r
		WHERE id = #{id};
	</select>

	<select id="findAllList"  resultType="com.chenjx.sys.model.Role">
		SELECT <include refid="Base_Select_SQL" />
		FROM sys_role r
	</select>

	<select id="findPermissionsByUsername" parameterType="string" resultMap="RoleMap">
		SELECT <include refid="Base_Select_SQL" />,
		p.permission,
		p.id AS pid,
		p.description AS pdescription,
		p.available AS pavailable
		FROM sys_users u
		LEFT JOIN sys_user_role ur on u.id = ur.userId
		LEFT JOIN sys_role r on ur.roleId = r.id
		LEFT JOIN sys_role_permissions rp on r.id = rp.role_id
		LEFT JOIN sys_permissions p on rp.permissions_id = p.id
		WHERE u.username = #{username}
	</select>
</mapper>